import React, { useState } from 'react';
import { Trash2, Heart, ChevronDown, ChevronUp, ArrowRight, ShoppingBag } from 'lucide-react';

const ShoppingCartPage = () => {
  // Mock cart data
  const [cartItems, setCartItems] = useState([
    {
      id: 1,
      name: "Embroidered Anarkali Suit",
      price: 3499,
      quantity: 1,
      size: "M",
      color: "Pink",
      image: "/api/placeholder/150/200"
    },
    {
      id: 2,
      name: "Designer Silk Saree",
      price: 4999,
      quantity: 1,
      size: "Free Size",
      color: "Blue",
      image: "/api/placeholder/150/200"
    }
  ]);

  const [showOrderSummary, setShowOrderSummary] = useState(false);
  const [couponCode, setCouponCode] = useState('');
  const [couponApplied, setCouponApplied] = useState(false);

  // Calculate totals
  const subtotal = cartItems.reduce((acc, item) => acc + (item.price * item.quantity), 0);
  const discount = couponApplied ? 500 : 0;
  const shipping = 149;
  const total = subtotal - discount + shipping;

  const updateQuantity = (id, newQuantity) => {
    if (newQuantity < 1) return;
    
    setCartItems(cartItems.map(item => 
      item.id === id ? { ...item, quantity: newQuantity } : item
    ));
  };

  const removeItem = (id) => {
    setCartItems(cartItems.filter(item => item.id !== id));
  };

  const applyCoupon = () => {
    if (couponCode.toLowerCase() === 'discount20') {
      setCouponApplied(true);
    }
  };

  const moveToWishlist = (id) => {
    // In a real app, this would add to wishlist and remove from cart
    removeItem(id);
  };

  return (
    <div className="bg-gray-50 min-h-screen">
      <div className="container mx-auto px-4 py-8">
        <h1 className="text-3xl font-bold text-gray-800 mb-8">Shopping Cart</h1>

        {cartItems.length > 0 ? (
          <div className="flex flex-col lg:flex-row gap-8">
            {/* Cart Items */}
            <div className="lg:w-2/3">
              <div className="bg-white rounded-lg shadow-sm overflow-hidden">
                <div className="p-6">
                  <h2 className="text-xl font-semibold text-gray-800 mb-2">{cartItems.length} {cartItems.length === 1 ? 'Item' : 'Items'} in Cart</h2>
                  <p className="text-gray-500 mb-4">Review your items before checking out</p>
                
                  {/* Cart Item List */}
                  <div className="divide-y divide-gray-200">
                    {cartItems.map(item => (
                      <div key={item.id} className="py-6 flex flex-col sm:flex-row">
                        {/* Product Image */}
                        <div className="sm:w-32 sm:h-32 h-24 w-24 flex-shrink-0 overflow-hidden rounded-md border border-gray-200 mb-4 sm:mb-0">
                          <img
                            src={item.image}
                            alt={item.name}
                            className="h-full w-full object-cover object-center"
                          />
                        </div>

                        {/* Product Details */}
                        <div className="flex-1 ml-0 sm:ml-6">
                          <div className="flex justify-between">
                            <div>
                              <h3 className="text-lg font-medium text-gray-800">{item.name}</h3>
                              <p className="mt-1 text-sm text-gray-500">Color: {item.color}</p>
                              <p className="mt-1 text-sm text-gray-500">Size: {item.size}</p>
                            </div>
                            <p className="text-lg font-semibold text-gray-800">₹{item.price}</p>
                          </div>

                          {/* Quantity and Actions */}
                          <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center mt-4">
                            <div className="flex items-center mb-4 sm:mb-0">
                              <div className="flex items-center border border-gray-300 rounded-md">
                                <button
                                  onClick={() => updateQuantity(item.id, item.quantity - 1)}
                                  className="p-2 text-gray-600 hover:text-pink-600 transition-colors"
                                >
                                  <ChevronDown size={16} />
                                </button>
                                <span className="w-8 text-center">{item.quantity}</span>
                                <button
                                  onClick={() => updateQuantity(item.id, item.quantity + 1)}
                                  className="p-2 text-gray-600 hover:text-pink-600 transition-colors"
                                >
                                  <ChevronUp size={16} />
                                </button>
                              </div>
                            </div>

                            <div className="flex space-x-3">
                              <button
                                onClick={() => moveToWishlist(item.id)}
                                className="text-gray-400 hover:text-pink-600 transition-colors flex items-center text-sm"
                              >
                                <Heart size={16} className="mr-1" />
                                Save for Later
                              </button>
                              <button
                                onClick={() => removeItem(item.id)}
                                className="text-gray-400 hover:text-red-600 transition-colors flex items-center text-sm"
                              >
                                <Trash2 size={16} className="mr-1" />
                                Remove
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </div>

              {/* Continue Shopping */}
              <div className="mt-6">
                <a href="#" className="text-pink-600 hover:text-pink-800 transition-colors font-medium flex items-center">
                  <ShoppingBag size={18} className="mr-2" />
                  Continue Shopping
                </a>
              </div>
            </div>

            {/* Order Summary */}
            <div className="lg:w-1/3">
              <div className="bg-white rounded-lg shadow-sm overflow-hidden sticky top-20">
                {/* Mobile Toggle */}
                <button
                  className="w-full p-4 flex justify-between items-center border-b border-gray-200 lg:hidden"
                  onClick={() => setShowOrderSummary(!showOrderSummary)}
                >
                  <span className="font-medium text-gray-800">Order Summary</span>
                  {showOrderSummary ? <ChevronUp size={18} /> : <ChevronDown size={18} />}
                </button>

                <div className={`p-6 ${showOrderSummary ? 'block' : 'hidden lg:block'}`}>
                  <h2 className="text-xl font-semibold text-gray-800 mb-6 hidden lg:block">Order Summary</h2>

                  {/* Price Breakdown */}
                  <div className="space-y-4 mb-6">
                    <div className="flex justify-between">
                      <span className="text-gray-600">Subtotal</span>
                      <span className="text-gray-800 font-medium">₹{subtotal}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-600">Shipping</span>
                      <span className="text-gray-800 font-medium">₹{shipping}</span>
                    </div>
                    {couponApplied && (
                      <div className="flex justify-between text-green-600">
                        <span>Discount</span>
                        <span>-₹{discount}</span>
                      </div>
                    )}
                    <div className="border-t border-gray-200 pt-4 flex justify-between">
                      <span className="text-lg font-semibold text-gray-800">Total</span>
                      <span className="text-lg font-semibold text-gray-800">₹{total}</span>
                    </div>
                  </div>

                  {/* Coupon Code */}
                  <div className="mb-6">
                    <div className="flex">
                      <input
                        type="text"
                        placeholder="Coupon Code"
                        className="flex-grow px-4 py-2 border border-gray-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-pink-600 focus:border-transparent"
                        value={couponCode}
                        onChange={(e) => setCouponCode(e.target.value)}
                      />
                      <button
                        onClick={applyCoupon}
                        className="bg-gray-800 hover:bg-gray-900 text-white px-4 py-2 rounded-r-md transition-colors"
                      >
                        Apply
                      </button>
                    </div>
                    {couponApplied && (
                      <p className="text-green-600 text-sm mt-2">Coupon applied successfully!</p>
                    )}
                    {!couponApplied && couponCode && (
                      <p className="text-gray-500 text-sm mt-2">Try code: DISCOUNT20</p>
                    )}
                  </div>

                  {/* Checkout Button */}
                  <button className="w-full bg-pink-600 hover:bg-pink-700 text-white py-3 px-6 rounded-md font-medium transition-colors flex items-center justify-center">
                    Proceed to Checkout
                    <ArrowRight size={18} className="ml-2" />
                  </button>

                  {/* Payment Methods */}
                  <div className="mt-6 flex justify-center">
                    <p className="text-gray-500 text-sm">We accept multiple payment methods</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        ) : (
          // Empty Cart
          <div className="bg-white rounded-lg shadow-sm p-8 text-center">
            <div className="w-24 h-24 bg-pink-100 rounded-full flex items-center justify-center mx-auto mb-6">
              <ShoppingBag size={36} className="text-pink-600" />
            </div>
            <h2 className="text-2xl font-semibold text-gray-800 mb-2">Your Cart is Empty</h2>
            <p className="text-gray-600 mb-6">Looks like you haven't added anything to your cart yet</p>
            <a href="#" className="inline-block bg-pink-600 hover:bg-pink-700 text-white py-3 px-6 rounded-md font-medium transition-colors">
              Start Shopping
            </a>
          </div>
        )}
      </div>
    </div>
  );
};

export default ShoppingCartPage;
