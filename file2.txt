import React, { useState } from 'react';
import { ShoppingCart, Heart, Share2, Star, ChevronDown, ChevronRight, ArrowLeft, ArrowRight } from 'lucide-react';

// Product Detail Page Component
const ProductDetailPage = () => {
  const [selectedSize, setSelectedSize] = useState('');
  const [quantity, setQuantity] = useState(1);
  const [activeTab, setActiveTab] = useState('description');
  const [activeImageIndex, setActiveImageIndex] = useState(0);

  // Mock product data
  const product = {
    id: 1,
    name: "Embroidered Anarkali Suit",
    price: 3499,
    originalPrice: 4999,
    discount: 30,
    rating: 4.8,
    reviewCount: 24,
    description: "This beautiful Anarkali suit features intricate embroidery work with a combination of thread and sequins. The flared silhouette creates an elegant drape, perfect for festive occasions and celebrations.",
    sizes: ["XS", "S", "M", "L", "XL"],
    colors: ["#D81B60", "#1976D2", "#388E3C", "#FBC02D"],
    images: [
      "/api/placeholder/600/800",
      "/api/placeholder/600/800", 
      "/api/placeholder/600/800", 
      "/api/placeholder/600/800"
    ],
    details: [
      "Material: Premium Georgette",
      "Work: Embroidery with thread and sequins",
      "Set Includes: Kurta, Bottom, Dupatta",
      "Occasion: Festive, Wedding, Party",
      "Care: Dry Clean Only"
    ],
    features: [
      "Premium quality fabric",
      "Comfortable fit",
      "Elegant design",
      "Detailed craftsmanship"
    ]
  };

  const handleSizeSelect = (size) => {
    setSelectedSize(size);
  };

  const incrementQuantity = () => {
    setQuantity(quantity + 1);
  };

  const decrementQuantity = () => {
    if (quantity > 1) {
      setQuantity(quantity - 1);
    }
  };

  const changeImage = (index) => {
    setActiveImageIndex(index);
  };

  const nextImage = () => {
    setActiveImageIndex((prev) => (prev + 1) % product.images.length);
  };

  const prevImage = () => {
    setActiveImageIndex((prev) => (prev - 1 + product.images.length) % product.images.length);
  };

  return (
    <div className="bg-white">
      {/* Breadcrumb */}
      <div className="bg-gray-50 py-4">
        <div className="container mx-auto px-4">
          <div className="flex items-center text-sm">
            <a href="#" className="text-gray-500 hover:text-pink-600 transition-colors">Home</a>
            <ChevronRight size={16} className="mx-2 text-gray-400" />
            <a href="#" className="text-gray-500 hover:text-pink-600 transition-colors">Ethnic Wear</a>
            <ChevronRight size={16} className="mx-2 text-gray-400" />
            <span className="text-gray-800 font-medium">{product.name}</span>
          </div>
        </div>
      </div>

      {/* Product Info */}
      <div className="container mx-auto px-4 py-8">
        <div className="flex flex-col lg:flex-row gap-12">
          {/* Product Images */}
          <div className="lg:w-1/2">
            <div className="relative mb-4 bg-gray-50 rounded-lg overflow-hidden">
              <img 
                src={product.images[activeImageIndex]} 
                alt={product.name} 
                className="w-full h-auto max-h-96 lg:max-h-[600px] object-contain mx-auto"
              />
              <button 
                onClick={prevImage}
                className="absolute left-4 top-1/2 transform -translate-y-1/2 bg-white p-2 rounded-full shadow-md hover:bg-pink-600 hover:text-white transition-colors"
              >
                <ArrowLeft size={20} />
              </button>
              <button 
                onClick={nextImage}
                className="absolute right-4 top-1/2 transform -translate-y-1/2 bg-white p-2 rounded-full shadow-md hover:bg-pink-600 hover:text-white transition-colors"
              >
                <ArrowRight size={20} />
              </button>
            </div>
            
            <div className="flex gap-3 overflow-x-auto py-2">
              {product.images.map((image, index) => (
                <button 
                  key={index}
                  onClick={() => changeImage(index)}
                  className={`w-20 h-20 rounded-md overflow-hidden flex-shrink-0 border-2 transition-colors ${activeImageIndex === index ? 'border-pink-600' : 'border-transparent'}`}
                >
                  <img src={image} alt={`Product view ${index + 1}`} className="w-full h-full object-cover" />
                </button>
              ))}
            </div>
          </div>

          {/* Product Details */}
          <div className="lg:w-1/2">
            <div className="mb-6">
              <h1 className="text-3xl font-bold text-gray-800 mb-2">{product.name}</h1>
              
              <div className="flex items-center mb-4">
                <div className="flex items-center text-yellow-400 mr-2">
                  <Star size={18} fill="currentColor" />
                  <span className="ml-1 text-gray-800 font-medium">{product.rating}</span>
                </div>
                <span className="text-gray-500">({product.reviewCount} reviews)</span>
              </div>
              
              <div className="flex items-center mb-4">
                <span className="text-2xl font-bold text-pink-600 mr-2">₹{product.price}</span>
                <span className="text-lg text-gray-500 line-through">₹{product.originalPrice}</span>
                <span className="ml-3 bg-pink-100 text-pink-700 px-2 py-1 rounded text-sm font-medium">{product.discount}% OFF</span>
              </div>

              <p className="text-gray-600 mb-6">{product.description}</p>
            </div>

            {/* Color Selection */}
            <div className="mb-6">
              <h3 className="text-gray-800 font-medium mb-3">Color</h3>
              <div className="flex space-x-3">
                {product.colors.map((color, index) => (
                  <button
                    key={index}
                    className="w-8 h-8 rounded-full border-2 border-gray-300 focus:outline-none focus:ring-2 focus:ring-pink-600"
                    style={{ backgroundColor: color }}
                    aria-label={`Color option ${index + 1}`}
                  />
                ))}
              </div>
            </div>

            {/* Size Selection */}
            <div className="mb-6">
              <div className="flex justify-between items-center mb-3">
                <h3 className="text-gray-800 font-medium">Size</h3>
                <button className="text-pink-600 text-sm hover:underline flex items-center">
                  Size Guide
                  <ChevronDown size={16} className="ml-1" />
                </button>
              </div>
              
              <div className="flex flex-wrap gap-3">
                {product.sizes.map((size) => (
                  <button
                    key={size}
                    onClick={() => handleSizeSelect(size)}
                    className={`h-10 min-w-10 px-3 rounded-md border font-medium transition-colors ${
                      selectedSize === size 
                        ? 'bg-pink-600 text-white border-pink-600' 
                        : 'bg-white text-gray-800 border-gray-300 hover:border-pink-600'
                    }`}
                  >
                    {size}
                  </button>
                ))}
              </div>
            </div>

            {/* Quantity Selector */}
            <div className="mb-6">
              <h3 className="text-gray-800 font-medium mb-3">Quantity</h3>
              <div className="flex items-center w-32">
                <button 
                  onClick={decrementQuantity}
                  className="w-8 h-8 flex items-center justify-center border border-gray-300 rounded-l text-gray-600 hover:bg-gray-100 transition-colors"
                >
                  -
                </button>
                <input 
                  type="text" 
                  value={quantity} 
                  readOnly
                  className="w-16 h-8 text-center border-y border-gray-300 text-gray-800" 
                />
                <button 
                  onClick={incrementQuantity}
                  className="w-8 h-8 flex items-center justify-center border border-gray-300 rounded-r text-gray-600 hover:bg-gray-100 transition-colors"
                >
                  +
                </button>
              </div>
            </div>

            {/* Action Buttons */}
            <div className="flex flex-col sm:flex-row gap-4 mb-8">
              <button className="flex-grow bg-pink-600 hover:bg-pink-700 text-white py-3 px-6 rounded-md font-medium transition-colors flex items-center justify-center">
                <ShoppingCart size={18} className="mr-2" />
                Add to Cart
              </button>
              <button className="sm:w-12 h-12 border border-gray-300 rounded-md flex items-center justify-center text-gray-600 hover:text-pink-600 hover:border-pink-600 transition-colors">
                <Heart size={20} />
              </button>
              <button className="sm:w-12 h-12 border border-gray-300 rounded-md flex items-center justify-center text-gray-600 hover:text-pink-600 hover:border-pink-600 transition-colors">
                <Share2 size={20} />
              </button>
            </div>

            {/* Additional Details */}
            <div className="border-t border-gray-200 pt-6">
              <div className="flex border-b border-gray-200">
                <button 
                  onClick={() => setActiveTab('description')}
                  className={`pb-3 px-4 font-medium transition-colors ${
                    activeTab === 'description'
                      ? 'text-pink-600 border-b-2 border-pink-600'
                      : 'text-gray-500 hover:text-gray-800'
                  }`}
                >
                  Description
                </button>
                <button 
                  onClick={() => setActiveTab('details')}
                  className={`pb-3 px-4 font-medium transition-colors ${
                    activeTab === 'details'
                      ? 'text-pink-600 border-b-2 border-pink-600'
                      : 'text-gray-500 hover:text-gray-800'
                  }`}
                >
                  Details
                </button>
                <button 
                  onClick={() => setActiveTab('reviews')}
                  className={`pb-3 px-4 font-medium transition-colors ${
                    activeTab === 'reviews'
                      ? 'text-pink-600 border-b-2 border-pink-600'
                      : 'text-gray-500 hover:text-gray-800'
                  }`}
                >
                  Reviews
                </button>
              </div>

              {/* Tab Content */}
              <div className="py-4">
                {activeTab === 'description' && (
                  <div>
                    <p className="text-gray-600">{product.description}</p>
                    <ul className="mt-4 space-y-2">
                      {product.features.map((feature, index) => (
                        <li key={index} className="flex items-start">
                          <div className="w-1.5 h-1.5 mt-2 bg-pink-600 rounded-full mr-2"></div>
                          <span className="text-gray-600">{feature}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
                
                {activeTab === 'details' && (
                  <div>
                    <ul className="space-y-3">
                      {product.details.map((detail, index) => (
                        <li key={index} className="flex items-start text-gray-600">
                          <div className="w-1.5 h-1.5 mt-2 bg-pink-600 rounded-full mr-2"></div>
                          <span>{detail}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
                
                {activeTab === 'reviews' && (
                  <div>
                    <div className="flex items-center justify-between mb-4">
                      <div>
                        <div className="flex items-center">
                          <div className="text-3xl font-bold text-gray-800 mr-2">{product.rating}</div>
                          <div className="flex text-yellow-400">
                            <Star size={18} fill="currentColor" />
                            <Star size={18} fill="currentColor" />
                            <Star size={18} fill="currentColor" />
                            <Star size={18} fill="currentColor" />
                            <Star size={18} fill="currentColor" className="text-gray-200" />
                          </div>
                        </div>
                        <div className="text-gray-500 mt-1">{product.reviewCount} reviews</div>
                      </div>
                      <button className="bg-pink-600 hover:bg-pink-700 text-white px-4 py-2 rounded-md font-medium transition-colors">
                        Write a Review
                      </button>
                    </div>
                    
                    <div className="text-center py-8 text-gray-500">
                      Reviews will be displayed here.
                    </div>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ProductDetailPage;
